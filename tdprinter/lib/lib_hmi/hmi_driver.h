#ifndef _HMI_DRIVER_
#define _HMI_DRIVER_

#include <stdint.h>
#include <rtthread.h>

void HMI_DriverInit(rt_device_t device);
/****************************************************************************
* 名    称： SendBeginCMD(void)
* 功    能： 发送帧头命令
* 入口参数： 无      
* 出口参数： 无
****************************************************************************/
void SendBeginCMD(void);

/****************************************************************************
* 名    称： SendEndCmd(void)
* 功    能： 发送帧尾命令
* 入口参数： 无      
* 出口参数： 无
****************************************************************************/
void SendEndCmd(void);

/****************************************************************************
* 名    称： SetHandShake(void)
* 功    能： 握手
* 入口参数： 无      
* 出口参数： 55表示握手成功，否则失败
****************************************************************************/
void SetHandShake(void);
void SetBuzzer(uint8_t time);
/****************************************************************************
* 名    称： SetFcolor(void)
* 功    能： 设置前景色
* 入口参数： fcolor  前景色RGB参数   
* 出口参数： 无
****************************************************************************/
void SetFcolor(uint16_t fcolor);

/****************************************************************************
* 名    称： SetBcolor(void)
* 功    能： 设置背景色
* 入口参数： bcolor  背景色RGB参数   
* 出口参数： 无
****************************************************************************/
void SetBcolor(uint16_t bcolor);

/****************************************************************************
* 名    称： GUI_CleanScreen(void)
* 功    能： 清屏
* 入口参数： 无  
* 出口参数： 无
****************************************************************************/
void GUI_CleanScreen(void);

/****************************************************************************
* 名    称： SetTextSpace(void)
* 功    能： 设置文字行列间距
* 入口参数： x_w     以点为单位的行间距，取值范围00~1F
             y_w     以点为单位的列间距，取值范围00~1F	
* 出口参数： 无
****************************************************************************/
void SetTextSpace(uint8_t x_w, uint8_t y_w);
/****************************************************************************
* 名    称： DisText_Region(void)
* 功    能： 限定文本显示范围
* 入口参数： x       以点为单位的X轴坐标值
							y       以点为单位的Y轴坐标值
							length   文本框限定的长度
							width    文本框限定的高度

* 出口参数： 无
****************************************************************************/
void SetFont_Region(uint8_t enable,uint16_t length,uint16_t width );

/****************************************************************************
* 名    称： SetFilterColor(void)
* 功    能： 设置过滤颜色
* 入口参数： fillcolor_dwon   滤除颜色的下限值
             fillcolor_up     滤除颜色的上限值	
* 出口参数： 无
****************************************************************************/
void SetFilterColor(uint16_t fillcolor_dwon, uint16_t fillcolor_up);


/****************************************************************************
* 名    称： DisText(void)
* 功    能： 文本显示
* 入口参数： x       以点为单位的X轴坐标值
             y       以点为单位的Y轴坐标值
   		     back    背景色使能
			 font    字库编码
			 strings 写入的汉字字符串
* 出口参数： 无
****************************************************************************/
void DisText(uint16_t x, uint16_t y,uint8_t back,uint8_t font,char *strings );

/****************************************************************************
* 名    称： DisData(void)
* 功    能： 数据显示
* 入口参数： x       以点为单位的X轴坐标值
             y       以点为单位的Y轴坐标值
   	         back    背景色使能
	         font    字库编码
	         sdata   写入的数据
* 出口参数： 无
****************************************************************************/
void DisData(uint16_t x, uint16_t y,uint8_t back,uint8_t font,char sdata );

/****************************************************************************
* 名    称： DisCursor(void)
* 功    能： 光标显示
* 入口参数： enable
             x        以点为单位的X轴坐标值
             y        以点为单位的Y轴坐标值
   		     length   光标长度
			 width    光标宽度
* 出口参数： 无
****************************************************************************/
void DisCursor(uint8_t enable,uint16_t x, uint16_t y,uint8_t length,uint8_t width );

/****************************************************************************
* 名    称： DisFull_Image(void)
* 功    能： 全屏整幅图显示
* 入口参数： image_id   图片ID编号
             masken     屏蔽色使能
* 出口参数： 无
****************************************************************************/
void DisFull_Image(uint16_t image_id,uint8_t masken);


/****************************************************************************
* 名    称： DisArea_Image(void)
* 功    能： 区域图片显示
* 入口参数： x          以点为单位的X轴坐标值
             y          以点为单位的Y轴坐标值 
             image_id   图片ID编号
             masken     屏蔽色使能
* 出口参数： 无
****************************************************************************/
void DisArea_Image(uint16_t x,uint16_t y,uint16_t image_id,uint8_t masken);

/****************************************************************************
* 名    称： DisCut_Image(void)
* 功    能： 图片剪切
* 入口参数： x          以点为单位的X轴坐标值
             y          以点为单位的Y轴坐标值 
             image_id   图片编号
             image_x    图片内部X坐标
             image_y    图片内部Y坐标
             image_l    剪切长度
             image_w    剪切宽度
             masken     屏蔽色使能
* 出口参数： 无
****************************************************************************/
void DisCut_Image(uint16_t x,uint16_t y,uint16_t image_id,uint16_t image_x,uint16_t image_y,
                   uint16_t image_l, uint16_t image_w,uint8_t masken);

/****************************************************************************
* 名    称： DisFlashImgae(void)
* 功    能： 动画显示
* 入口参数： x               以点为单位的X轴坐标值
             y               以点为单位的Y轴坐标值 
             flashimage_id   GIF动画ID编号         
* 出口参数： 无
****************************************************************************/
void DisFlashImage(uint16_t x,uint16_t y,uint16_t flashimage_id,uint8_t enable,uint8_t playnum);
/****************************************************************************
* 名    称： GUI_Dot(void)
* 功    能： 画点
* 入口参数： x       以点为单位的X轴坐标值
             y       以点为单位的Y轴坐标值           
* 出口参数： 无
****************************************************************************/
void GUI_Dot(uint16_t x,uint16_t y);

/****************************************************************************
* 名    称： GUI_Line(void)
* 功    能： 画线
* 入口参数： x0      以点为单位的X轴坐标值
             y0      以点为单位的Y轴坐标值    
             x1      以点为单位的X轴坐标值
             y1      以点为单位的Y轴坐标值  
* 出口参数： 无
****************************************************************************/
void GUI_Line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1);
/****************************************************************************
* 名    称： GUI_ConDots(void)
* 功    能： 绘制折线
* 入口参数： mode     0:用前景色描绘 1：用背景色描绘    
pDot    指向点的指针   
* 出口参数： 无
****************************************************************************/
void GUI_ConDots(uint8_t mode,char *pDot,uint16_t num);
/****************************************************************************
* 名    称： GUI_Circle(void)
* 功    能： 画空心圆
* 入口参数： x0               以点为单位的X轴坐标值
             y0               以点为单位的Y轴坐标值    
             r                空心圆的半径   
* 出口参数： 无
****************************************************************************/
void GUI_Circle(uint16_t x0, uint16_t y0, uint16_t r);

/****************************************************************************
* 名    称： GUI_CircleFill(void)
* 功    能： 画实心圆
* 入口参数： x0               以点为单位的X轴坐标值
             y0               以点为单位的Y轴坐标值    
             r                实心圆的半径   
* 出口参数： 无
****************************************************************************/
void GUI_CircleFill(uint16_t x0, uint16_t y0, uint16_t r);

/****************************************************************************
* 名    称： GUI_Rectangle(void)
* 功    能： 画空心矩形
* 入口参数： x0      以点为单位的空心矩形左上角X坐标值
             y0      以点为单位的空心矩形左上角Y坐标值   
             x1      以点为单位的空心矩形右下角X坐标值
             y1      以点为单位的空心矩形右下角Y坐标值   
* 出口参数： 无
****************************************************************************/
void GUI_Rectangle(uint16_t x0, uint16_t y0, uint16_t x1,uint16_t y1 );

/****************************************************************************
* 名    称： RectangleFill(void)
* 功    能： 画实心矩形
* 入口参数： x0      以点为单位的实心矩形左上角X坐标值
             y0      以点为单位的实心矩形左上角Y坐标值   
             x1      以点为单位的实心矩形右下角X坐标值
             y1      以点为单位的实心矩形右下角Y坐标值   
* 出口参数： 无
****************************************************************************/
void GUI_RectangleFill(uint16_t x0, uint16_t y0, uint16_t x1,uint16_t y1 );

/****************************************************************************
* 名    称： GUI_Ellipse(void)
* 功    能： 画空心椭圆
* 入口参数： x0      以点为单位的空心椭圆最左端X坐标值
             y0      以点为单位的空心椭圆最上端Y坐标值   
             x1      以点为单位的空心椭圆最右端X坐标值
             y1      以点为单位的空心椭圆最下端Y坐标值   
* 出口参数： 无
****************************************************************************/
void GUI_Ellipse (uint16_t x0, uint16_t y0, uint16_t x1,uint16_t y1 );

/****************************************************************************
* 名    称： GUI_EllipseFill(void)
* 功    能： 画实心椭圆
* 入口参数： x0      以点为单位的实心椭圆最左端X坐标值
             y0      以点为单位的实心椭圆最上端Y坐标值   
             x1      以点为单位的实心椭圆最右端X坐标值
             y1      以点为单位的实心椭圆最下端Y坐标值   
* 出口参数： 无
****************************************************************************/
void GUI_EllipseFill (uint16_t x0, uint16_t y0, uint16_t x1,uint16_t y1 );

/****************************************************************************
* 名    称： SetBackLight(void)
* 功    能： 背光调节
* 入口参数： light_level
* 出口参数： 无
****************************************************************************/
void SetBackLight(uint8_t light_level);

/****************************************************************************
* 名    称： SetCommBps(void)
* 功    能： 设置通讯波特率
* 入口参数： Baud
* 出口参数： 无
****************************************************************************/
void SetCommBps(uint8_t baudset);


/****************************************************************************
* 名    称： SetScreen(void)
* 功    能： 切换画面
* 入口参数： screen_id，目标画面ID
* 出口参数： 无
****************************************************************************/
void SetScreen(uint16_t screen_id);

/****************************************************************************
* 名    称： GetScreen(void)
* 功    能： 异步获取当前画面ID
* 入口参数： 无
* 出口参数： 无
****************************************************************************/
void GetScreen(void);

/****************************************************************************
* 名    称： SetControlValue(void)
* 功    能： 设置控件的数值
* 入口参数： screen_id，目标画面ID
* 入口参数： control_id，目标控件ID
* 入口参数： param，设置参数
* 入口参数： param_len，参数长度
* 出口参数： 无
****************************************************************************/
void SetControlValue(uint16_t screen_id,uint16_t control_id,const char *param,uint16_t param_len);
void SetControlValue2(uint16_t screen_id,uint16_t control_id,const char *pre,const char *param,const char *post);

/****************************************************************************
* 名    称： GetControlValue(void)
* 功    能： 异步获取控件数值
* 入口参数： screen_id，目标画面ID
* 入口参数： control_id，目标控件ID
* 出口参数： 无
****************************************************************************/
void GetControlValue(uint16_t screen_id,uint16_t control_id);

/****************************************************************************
* 名    称： SetButtonValue(void)
* 功    能： 设置按钮控件的状态值
* 入口参数： screen_id，目标画面ID
* 入口参数： control_id，目标控件ID
* 入口参数： value，按钮状态-0弹起，1按下
* 出口参数： 无
****************************************************************************/
void SetButtonValue(uint16_t screen_id,uint16_t control_id,char value);

/****************************************************************************
* 名    称： SetTextValue(void)
* 功    能： 设置文本控件的显示文字
* 入口参数： screen_id，目标画面ID
* 入口参数： control_id，目标控件ID
* 入口参数： str，显示文字
* 出口参数： 无
****************************************************************************/
void SetTextValue(uint16_t screen_id,uint16_t control_id,const char *str);

/****************************************************************************
* 名    称： SetProgressValue(void)
* 功    能： 设置进度条控件的数值
* 入口参数： screen_id，目标画面ID
* 入口参数： control_id，目标控件ID
* 入口参数： value，进度位置
* 出口参数： 无
****************************************************************************/
void SetProgressValue(uint16_t screen_id,uint16_t control_id,uint32_t value);

/****************************************************************************
* 名    称： SetMeterValue(void)
* 功    能： 设置仪表控件的数值
* 入口参数： screen_id，目标画面ID
* 入口参数： control_id，目标控件ID
* 入口参数： value，指针位置
* 出口参数： 无
****************************************************************************/
void SetMeterValue(uint16_t screen_id,uint16_t control_id,uint32_t value);
void AnimationSetFrame(uint16_t sid,uint16_t cid,uint8_t frame);
void ShowControl(uint16_t sid,uint16_t cid,uint8_t enable);


#endif
